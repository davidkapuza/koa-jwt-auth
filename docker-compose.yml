version: '3.0'
name: turbo-docker-monorepo-dev

x-defaults:
  &defaults
  init: true
  tty: true
  networks:
    - app_network

services:
  client:
    <<: *defaults
    depends_on:
      - server
    ports:
      - "3000:3000"
    command: yarn workspace client dev
    environment:
      - PORT=3000
    env_file:
    - .env
    build:
      args:
        APP: client
        START_COMMAND: dev
      context: .
      dockerfile: ./dockerfiles/Dockerfile.dev
    volumes:
      - ./apps/client:/app/apps/client
      - /app/apps/client/node_modules
      - /app/apps/client/.next
  server:
    <<: *defaults
    ports:
      - 8000:8000
    command: yarn workspace server start:dev
    env_file:
      - .env
    build:
      args:
        APP: server
        START_COMMAND: start:dev
      context: .
      dockerfile: ./dockerfiles/Dockerfile.dev
    volumes:
      - ./apps/server:/app/apps/server
      - /app/apps/server/node_modules
  mongo:
    <<: *defaults
    image: mongo:latest
    container_name: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    env_file:
      - .env
    volumes:
      - ./data/mongo:/data/db
      - ./scripts/docker/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - '6000:27017'
  redis:
    <<: *defaults
    image: redis:latest
    container_name: redis
    ports:
      - '6379:6379'
    volumes:
      - redis:/data
volumes:
  mongo:
  redis:


networks:
  app_network:
